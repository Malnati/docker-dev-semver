diff --git a/commit-msg b/commit-msg
index e3239ae..239ecee 100644
--- a/commit-msg
+++ b/commit-msg
@@ -1,2 +1 @@
 NODE_SUGGESTION=$(node ../../commit-msg.js)
-echo $NODE_SUGGESTION
\ No newline at end of file
diff --git a/git-diff-cached-diff.logs b/git-diff-cached-diff.logs
index df40b24..3b05b76 100644
--- a/git-diff-cached-diff.logs
+++ b/git-diff-cached-diff.logs
@@ -1,569 +1,888 @@
 diff --git a/commit-msg b/commit-msg
-index 07cde74..239ecee 100644
+index 239ecee..e3239ae 100644
 --- a/commit-msg
 +++ b/commit-msg
-@@ -1,51 +1 @@
--#!/bin/bash
--
--# OpenAI Key
--API_KEY="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"
--
--# Verify if required utilities are installed
--if ! command -v curl &> /dev/null; then
--    echo "Error: curl is not installed. Exiting."
--    exit 1
--fi
--
--if ! command -v jq &> /dev/null; then
--    echo "Error: jq is not installed. Exiting."
--    exit 1
--fi
--
--# File where the commit message is stored
--COMMIT_MSG_FILE=$1
--
--# Capture the original commit message
--ORIGINAL_COMMIT_MSG=$(cat $COMMIT_MSG_FILE)
--
--# Capture the changes staged for commit
--DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)
--
--# Initialize a variable to store the semantic versioning suggestion
--SEMVER_SUGGESTION=""
--
--# Properly escape the DIFF_OUTPUT using jq
--ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c . --unbuffered)
--
--# Construct the JSON payload using printf for proper escaping
--JSON_PAYLOAD=$(printf '{"prompt":"Analyze commit for semantic versioning: %s","max_tokens":50}' "$ESCAPED_DIFF_OUTPUT")
--
--# Make an API call to GPT-3.5 for analysis
--API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
--    -H "Content-Type: application/json" \
--    -d "$JSON_PAYLOAD" \
--    "https://api.openai.com/v1/chat/completions")
--
--# Debug: Print API response
--echo "API Response: $API_RESPONSE"
--
--# Extract the suggestion from the API response using jq
--SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text' --unbuffered)
--
--# Debug: Print extracted suggestion
--echo "Extracted Suggestion: $SEMVER_SUGGESTION"
--
--# Append the semantic versioning suggestion to the original commit message
--echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
+@@ -1 +1,2 @@
+ NODE_SUGGESTION=$(node ../../commit-msg.js)
++echo $NODE_SUGGESTION
 \ No newline at end of file
-+NODE_SUGGESTION=$(node ../../commit-msg.js)
 diff --git a/git-diff-cached-diff.logs b/git-diff-cached-diff.logs
-index de89159..d3000fe 100644
+index d3000fe..df40b24 100644
 --- a/git-diff-cached-diff.logs
 +++ b/git-diff-cached-diff.logs
-@@ -1,191 +1,325 @@
+@@ -1,325 +1,569 @@
  diff --git a/commit-msg b/commit-msg
--index 0b96fa0..a222c54 100644
-+index a222c54..07cde74 100644
+-index a222c54..07cde74 100644
++index 07cde74..239ecee 100644
  --- a/commit-msg
  +++ b/commit-msg
--@@ -3,15 +3,49 @@
-- # OpenAI Key
-- API_KEY="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"
-+@@ -29,8 +29,8 @@ SEMVER_SUGGESTION=""
-+ # Properly escape the DIFF_OUTPUT using jq
-+ ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c . --unbuffered)
-  
---# The prompt you want to send
---PROMPT="Translate the following English text to French: 'Hello, World!'"
---
---# Make the API request and store the response
---RESPONSE=$(curl -s -X POST "https://api.openai.com/v1/engines/davinci-codex/completions" \
---  -H "Content-Type: application/json" \
---  -H "Authorization: Bearer $API_KEY" \
---  -d "{\"prompt\":\"$PROMPT\",\"max_tokens\":100}" )
---
---# Extract and print the generated text using jq
---GENERATED_TEXT=$(echo $RESPONSE | jq -r '.choices[0].text')
---echo "Generated Text: $GENERATED_TEXT"
--+# Verify if required utilities are installed
--+if ! command -v curl &> /dev/null; then
--+    echo "Error: curl is not installed. Exiting."
--+    exit 1
--+fi
--+
--+if ! command -v jq &> /dev/null; then
--+    echo "Error: jq is not installed. Exiting."
--+    exit 1
--+fi
--+
--+# File where the commit message is stored
--+COMMIT_MSG_FILE=$1
--+
--+# Capture the original commit message
--+ORIGINAL_COMMIT_MSG=$(cat $COMMIT_MSG_FILE)
--+
--+# Capture the changes staged for commit
--+DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)
--+
--+# Initialize a variable to store the semantic versioning suggestion
--+SEMVER_SUGGESTION=""
--+
--+# Properly escape the DIFF_OUTPUT using jq
--+ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c . --unbuffered)
--+
--+# Construct the JSON payload
--+JSON_PAYLOAD="{\"prompt\":\"Analyze commit for semantic versioning: $ESCAPED_DIFF_OUTPUT\",\"max_tokens\":50}"
--+
--+# Make an API call to GPT-3.5 for analysis
--+API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
--+    -H "Content-Type: application/json" \
--+    -d "$JSON_PAYLOAD" \
--+    "https://api.openai.com/v1/chat/completions")
--+
--+# Debug: Print API response
--+echo "API Response: $API_RESPONSE"
--+
--+# Extract the suggestion from the API response using jq
--+SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text' --unbuffered)
--+
--+# Debug: Print extracted suggestion
--+echo "Extracted Suggestion: $SEMVER_SUGGESTION"
--+
--+# Append the semantic versioning suggestion to the original commit message
-+-# Construct the JSON payload
-+-JSON_PAYLOAD="{\"prompt\":\"Analyze commit for semantic versioning: $ESCAPED_DIFF_OUTPUT\",\"max_tokens\":50}"
-++# Construct the JSON payload using printf for proper escaping
-++JSON_PAYLOAD=$(printf '{"prompt":"Analyze commit for semantic versioning: %s","max_tokens":50}' "$ESCAPED_DIFF_OUTPUT")
-+ 
-+ # Make an API call to GPT-3.5 for analysis
-+ API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
-+@@ -48,4 +48,4 @@ SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text' --unbuffered)
-+ echo "Extracted Suggestion: $SEMVER_SUGGESTION"
-+ 
-+ # Append the semantic versioning suggestion to the original commit message
-+-echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
- +echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
-+\ No newline at end of file
+-@@ -29,8 +29,8 @@ SEMVER_SUGGESTION=""
+- # Properly escape the DIFF_OUTPUT using jq
+- ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c . --unbuffered)
+- 
+--# Construct the JSON payload
+--JSON_PAYLOAD="{\"prompt\":\"Analyze commit for semantic versioning: $ESCAPED_DIFF_OUTPUT\",\"max_tokens\":50}"
+-+# Construct the JSON payload using printf for proper escaping
+-+JSON_PAYLOAD=$(printf '{"prompt":"Analyze commit for semantic versioning: %s","max_tokens":50}' "$ESCAPED_DIFF_OUTPUT")
+- 
+- # Make an API call to GPT-3.5 for analysis
+- API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
+-@@ -48,4 +48,4 @@ SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text' --unbuffered)
+- echo "Extracted Suggestion: $SEMVER_SUGGESTION"
+- 
+- # Append the semantic versioning suggestion to the original commit message
++@@ -1,51 +1 @@
++-#!/bin/bash
++-
++-# OpenAI Key
++-API_KEY="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"
++-
++-# Verify if required utilities are installed
++-if ! command -v curl &> /dev/null; then
++-    echo "Error: curl is not installed. Exiting."
++-    exit 1
++-fi
++-
++-if ! command -v jq &> /dev/null; then
++-    echo "Error: jq is not installed. Exiting."
++-    exit 1
++-fi
++-
++-# File where the commit message is stored
++-COMMIT_MSG_FILE=$1
++-
++-# Capture the original commit message
++-ORIGINAL_COMMIT_MSG=$(cat $COMMIT_MSG_FILE)
++-
++-# Capture the changes staged for commit
++-DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)
++-
++-# Initialize a variable to store the semantic versioning suggestion
++-SEMVER_SUGGESTION=""
++-
++-# Properly escape the DIFF_OUTPUT using jq
++-ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c . --unbuffered)
++-
++-# Construct the JSON payload using printf for proper escaping
++-JSON_PAYLOAD=$(printf '{"prompt":"Analyze commit for semantic versioning: %s","max_tokens":50}' "$ESCAPED_DIFF_OUTPUT")
++-
++-# Make an API call to GPT-3.5 for analysis
++-API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
++-    -H "Content-Type: application/json" \
++-    -d "$JSON_PAYLOAD" \
++-    "https://api.openai.com/v1/chat/completions")
++-
++-# Debug: Print API response
++-echo "API Response: $API_RESPONSE"
++-
++-# Extract the suggestion from the API response using jq
++-SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text' --unbuffered)
++-
++-# Debug: Print extracted suggestion
++-echo "Extracted Suggestion: $SEMVER_SUGGESTION"
++-
++-# Append the semantic versioning suggestion to the original commit message
+ -echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
+-+echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
+ \ No newline at end of file
+++NODE_SUGGESTION=$(node ../../commit-msg.js)
  diff --git a/git-diff-cached-diff.logs b/git-diff-cached-diff.logs
--index e69de29..bb1f8c6 100644
-+index bb1f8c6..de89159 100644
+-index bb1f8c6..de89159 100644
++index de89159..d3000fe 100644
  --- a/git-diff-cached-diff.logs
  +++ b/git-diff-cached-diff.logs
--@@ -0,0 +1,120 @@
--+diff --git a/commit-msg b/commit-msg
--+index bcfa7f9..0b96fa0 100644
--+--- a/commit-msg
--++++ b/commit-msg
--+@@ -3,49 +3,15 @@
--+ # OpenAI Key
--+ API_KEY="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"
--+ 
--+-# Verify if required utilities are installed
--+-if ! command -v curl &> /dev/null; then
--+-    echo "Error: curl is not installed. Exiting."
--+-    exit 1
--+-fi
--+-
--+-if ! command -v jq &> /dev/null; then
--+-    echo "Error: jq is not installed. Exiting."
--+-    exit 1
--+-fi
--+-
--+-# File where the commit message is stored
--+-COMMIT_MSG_FILE=$1
--+-
--+-# Capture the original commit message
--+-ORIGINAL_COMMIT_MSG=$(cat $COMMIT_MSG_FILE)
--+-
--+-# Capture the changes staged for commit
--+-DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)
--+-
--+-# Initialize a variable to store the semantic versioning suggestion
--+-SEMVER_SUGGESTION=""
--+-
--+-# Properly escape the DIFF_OUTPUT using jq
--+-ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c .)
--+-
--+-# Construct the JSON payload
--+-JSON_PAYLOAD="{\"prompt\":\"Analyze commit for semantic versioning: $ESCAPED_DIFF_OUTPUT\",\"max_tokens\":50}"
--+-
--+-# Make an API call to GPT-4 for analysis
--+-API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
--+-    -H "Content-Type: application/json" \
--+-    -d "$JSON_PAYLOAD" \
--+-    "https://api.openai.com/v1/chat/completions")
--+-
--+-# Debug: Print API response
--+-echo "API Response: $API_RESPONSE"
--+-
--+-# Extract the suggestion from the API response using jq
--+-SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text')
--+-
--+-# Debug: Print extracted suggestion
--+-echo "Extracted Suggestion: $SEMVER_SUGGESTION"
--+-
--+-# Append the semantic versioning suggestion to the original commit message
--+-echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
--+\ No newline at end of file
--++# The prompt you want to send
--++PROMPT="Translate the following English text to French: 'Hello, World!'"
-+@@ -1,120 +1,191 @@
-+ diff --git a/commit-msg b/commit-msg
-+-index bcfa7f9..0b96fa0 100644
-++index 0b96fa0..a222c54 100644
-+ --- a/commit-msg
-+ +++ b/commit-msg
-+-@@ -3,49 +3,15 @@
-++@@ -3,15 +3,49 @@
-+  # OpenAI Key
-+  API_KEY="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"
-+  
-+--# Verify if required utilities are installed
-+--if ! command -v curl &> /dev/null; then
-+--    echo "Error: curl is not installed. Exiting."
-+--    exit 1
-+--fi
-++-# The prompt you want to send
-++-PROMPT="Translate the following English text to French: 'Hello, World!'"
-+ -
-+--if ! command -v jq &> /dev/null; then
-+--    echo "Error: jq is not installed. Exiting."
-+--    exit 1
-+--fi
-++-# Make the API request and store the response
-++-RESPONSE=$(curl -s -X POST "https://api.openai.com/v1/engines/davinci-codex/completions" \
-++-  -H "Content-Type: application/json" \
-++-  -H "Authorization: Bearer $API_KEY" \
-++-  -d "{\"prompt\":\"$PROMPT\",\"max_tokens\":100}" )
-+ -
-+--# File where the commit message is stored
-+--COMMIT_MSG_FILE=$1
-+--
-+--# Capture the original commit message
-+--ORIGINAL_COMMIT_MSG=$(cat $COMMIT_MSG_FILE)
-+--
-+--# Capture the changes staged for commit
-+--DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)
-+--
-+--# Initialize a variable to store the semantic versioning suggestion
-+--SEMVER_SUGGESTION=""
-+--
-+--# Properly escape the DIFF_OUTPUT using jq
-+--ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c .)
-+--
-+--# Construct the JSON payload
-+--JSON_PAYLOAD="{\"prompt\":\"Analyze commit for semantic versioning: $ESCAPED_DIFF_OUTPUT\",\"max_tokens\":50}"
-+--
-+--# Make an API call to GPT-4 for analysis
-+--API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
-+--    -H "Content-Type: application/json" \
-+--    -d "$JSON_PAYLOAD" \
-+--    "https://api.openai.com/v1/chat/completions")
-+--
-+--# Debug: Print API response
-+--echo "API Response: $API_RESPONSE"
-+--
-+--# Extract the suggestion from the API response using jq
-+--SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text')
-+--
-+--# Debug: Print extracted suggestion
-+--echo "Extracted Suggestion: $SEMVER_SUGGESTION"
-+--
-+--# Append the semantic versioning suggestion to the original commit message
-+--echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
-+-\ No newline at end of file
-+-+# The prompt you want to send
-+-+PROMPT="Translate the following English text to French: 'Hello, World!'"
-++-# Extract and print the generated text using jq
-++-GENERATED_TEXT=$(echo $RESPONSE | jq -r '.choices[0].text')
-++-echo "Generated Text: $GENERATED_TEXT"
-+++# Verify if required utilities are installed
-+++if ! command -v curl &> /dev/null; then
-+++    echo "Error: curl is not installed. Exiting."
-+++    exit 1
-+++fi
-+++
-+++if ! command -v jq &> /dev/null; then
-+++    echo "Error: jq is not installed. Exiting."
-+++    exit 1
-+++fi
-+++
-+++# File where the commit message is stored
-+++COMMIT_MSG_FILE=$1
-+++
-+++# Capture the original commit message
-+++ORIGINAL_COMMIT_MSG=$(cat $COMMIT_MSG_FILE)
-+++
-+++# Capture the changes staged for commit
-+++DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)
-+++
-+++# Initialize a variable to store the semantic versioning suggestion
-+++SEMVER_SUGGESTION=""
-+++
-+++# Properly escape the DIFF_OUTPUT using jq
-+++ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c . --unbuffered)
-+++
-+++# Construct the JSON payload
-+++JSON_PAYLOAD="{\"prompt\":\"Analyze commit for semantic versioning: $ESCAPED_DIFF_OUTPUT\",\"max_tokens\":50}"
-+++
-+++# Make an API call to GPT-3.5 for analysis
-+++API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
-+++    -H "Content-Type: application/json" \
-+++    -d "$JSON_PAYLOAD" \
-+++    "https://api.openai.com/v1/chat/completions")
- ++
--++# Make the API request and store the response
--++RESPONSE=$(curl -s -X POST "https://api.openai.com/v1/engines/davinci-codex/completions" \
--++  -H "Content-Type: application/json" \
--++  -H "Authorization: Bearer $API_KEY" \
--++  -d "{\"prompt\":\"$PROMPT\",\"max_tokens\":100}" )
-+++# Debug: Print API response
-+++echo "API Response: $API_RESPONSE"
- ++
--++# Extract and print the generated text using jq
--++GENERATED_TEXT=$(echo $RESPONSE | jq -r '.choices[0].text')
--++echo "Generated Text: $GENERATED_TEXT"
--+diff --git a/git-diff-cached-diff.logs b/git-diff-cached-diff.logs
--+index 7478a5a..e69de29 100644
--+--- a/git-diff-cached-diff.logs
--++++ b/git-diff-cached-diff.logs
--+@@ -1,48 +0,0 @@
--+-diff --git a/commit-msg b/commit-msg
--+-index 07c3c02..bcfa7f9 100644
--+---- a/commit-msg
--+-+++ b/commit-msg
--+-@@ -1,7 +1,7 @@
--+- #!/bin/bash
--+- 
--+- # OpenAI Key
--+--API_KEY="???"
--+-+API_KEY="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"
--+- 
--+- # Verify if required utilities are installed
--+- if ! command -v curl &> /dev/null; then
--+-@@ -21,7 +21,7 @@ COMMIT_MSG_FILE=$1
--+- ORIGINAL_COMMIT_MSG=$(cat $COMMIT_MSG_FILE)
--+- 
--+- # Capture the changes staged for commit
--+--DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)     
--+-+DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)
--+- 
--+- # Initialize a variable to store the semantic versioning suggestion
--+- SEMVER_SUGGESTION=""
--+-@@ -32,20 +32,20 @@ ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c .)
--+- # Construct the JSON payload
--+- JSON_PAYLOAD="{\"prompt\":\"Analyze commit for semantic versioning: $ESCAPED_DIFF_OUTPUT\",\"max_tokens\":50}"
--+- 
--+--# Make an API call to ChatGPT for analysis
--+-+# Make an API call to GPT-4 for analysis
--+- API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
--+-     -H "Content-Type: application/json" \
--+-     -d "$JSON_PAYLOAD" \
--+--    "https://api.openai.com/v1/engines/davinci-codex/completions")
--+-+    "https://api.openai.com/v1/chat/completions")
--+- 
--+- # Debug: Print API response
--+- echo "API Response: $API_RESPONSE"
--+- 
--+--# Extract the suggestion from the API response
--+-+# Extract the suggestion from the API response using jq
--+- SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text')
--+- 
--+- # Debug: Print extracted suggestion
--+- echo "Extracted Suggestion: $SEMVER_SUGGESTION"
--+- 
--+- # Append the semantic versioning suggestion to the original commit message
--+--echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
--+-+echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
--+-\ No newline at end of file
-+++# Extract the suggestion from the API response using jq
-+++SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text' --unbuffered)
-+ +
-+-+# Make the API request and store the response
-+-+RESPONSE=$(curl -s -X POST "https://api.openai.com/v1/engines/davinci-codex/completions" \
-+-+  -H "Content-Type: application/json" \
-+-+  -H "Authorization: Bearer $API_KEY" \
-+-+  -d "{\"prompt\":\"$PROMPT\",\"max_tokens\":100}" )
-+++# Debug: Print extracted suggestion
-+++echo "Extracted Suggestion: $SEMVER_SUGGESTION"
-+ +
-+-+# Extract and print the generated text using jq
-+-+GENERATED_TEXT=$(echo $RESPONSE | jq -r '.choices[0].text')
-+-+echo "Generated Text: $GENERATED_TEXT"
-+++# Append the semantic versioning suggestion to the original commit message
-+++echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
-+ diff --git a/git-diff-cached-diff.logs b/git-diff-cached-diff.logs
-+-index 7478a5a..e69de29 100644
-++index e69de29..bb1f8c6 100644
-+ --- a/git-diff-cached-diff.logs
-+ +++ b/git-diff-cached-diff.logs
-+-@@ -1,48 +0,0 @@
-+--diff --git a/commit-msg b/commit-msg
-+--index 07c3c02..bcfa7f9 100644
-+----- a/commit-msg
-+--+++ b/commit-msg
-+--@@ -1,7 +1,7 @@
-+-- #!/bin/bash
-+-- 
-+-- # OpenAI Key
-+---API_KEY="???"
-+--+API_KEY="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"
-+-- 
-+-- # Verify if required utilities are installed
-+-- if ! command -v curl &> /dev/null; then
-+--@@ -21,7 +21,7 @@ COMMIT_MSG_FILE=$1
-+-- ORIGINAL_COMMIT_MSG=$(cat $COMMIT_MSG_FILE)
-+-- 
-+-- # Capture the changes staged for commit
-+---DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)     
-+--+DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)
-+-- 
-+-- # Initialize a variable to store the semantic versioning suggestion
-+-- SEMVER_SUGGESTION=""
-+--@@ -32,20 +32,20 @@ ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c .)
-+-- # Construct the JSON payload
-+-- JSON_PAYLOAD="{\"prompt\":\"Analyze commit for semantic versioning: $ESCAPED_DIFF_OUTPUT\",\"max_tokens\":50}"
-+-- 
-+---# Make an API call to ChatGPT for analysis
-+--+# Make an API call to GPT-4 for analysis
-+-- API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
-+--     -H "Content-Type: application/json" \
-+--     -d "$JSON_PAYLOAD" \
-+---    "https://api.openai.com/v1/engines/davinci-codex/completions")
-+--+    "https://api.openai.com/v1/chat/completions")
-+-- 
-+-- # Debug: Print API response
-+-- echo "API Response: $API_RESPONSE"
-+-- 
-+---# Extract the suggestion from the API response
-+--+# Extract the suggestion from the API response using jq
-+-- SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text')
-+-- 
-+-- # Debug: Print extracted suggestion
-+-- echo "Extracted Suggestion: $SEMVER_SUGGESTION"
-+-- 
-+-- # Append the semantic versioning suggestion to the original commit message
-+---echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
-+--+echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
-+--\ No newline at end of file
-++@@ -0,0 +1,120 @@
-+++diff --git a/commit-msg b/commit-msg
-+++index bcfa7f9..0b96fa0 100644
-+++--- a/commit-msg
-++++++ b/commit-msg
-+++@@ -3,49 +3,15 @@
-+++ # OpenAI Key
-+++ API_KEY="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"
-+++ 
-+++-# Verify if required utilities are installed
-+++-if ! command -v curl &> /dev/null; then
-+++-    echo "Error: curl is not installed. Exiting."
-+++-    exit 1
-+++-fi
-+++-
-+++-if ! command -v jq &> /dev/null; then
-+++-    echo "Error: jq is not installed. Exiting."
-+++-    exit 1
-+++-fi
-+++-
-+++-# File where the commit message is stored
-+++-COMMIT_MSG_FILE=$1
-+++-
-+++-# Capture the original commit message
-+++-ORIGINAL_COMMIT_MSG=$(cat $COMMIT_MSG_FILE)
-+++-
-+++-# Capture the changes staged for commit
-+++-DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)
-+++-
-+++-# Initialize a variable to store the semantic versioning suggestion
-+++-SEMVER_SUGGESTION=""
-+++-
-+++-# Properly escape the DIFF_OUTPUT using jq
-+++-ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c .)
-+++-
-+++-# Construct the JSON payload
-+++-JSON_PAYLOAD="{\"prompt\":\"Analyze commit for semantic versioning: $ESCAPED_DIFF_OUTPUT\",\"max_tokens\":50}"
-+++-
-+++-# Make an API call to GPT-4 for analysis
-+++-API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
-+++-    -H "Content-Type: application/json" \
-+++-    -d "$JSON_PAYLOAD" \
-+++-    "https://api.openai.com/v1/chat/completions")
-+++-
-+++-# Debug: Print API response
-+++-echo "API Response: $API_RESPONSE"
-+++-
-+++-# Extract the suggestion from the API response using jq
-+++-SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text')
-+++-
-+++-# Debug: Print extracted suggestion
-+++-echo "Extracted Suggestion: $SEMVER_SUGGESTION"
-+++-
-+++-# Append the semantic versioning suggestion to the original commit message
-+++-echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
-+++\ No newline at end of file
-++++# The prompt you want to send
-++++PROMPT="Translate the following English text to French: 'Hello, World!'"
+-@@ -1,120 +1,191 @@
++@@ -1,191 +1,325 @@
+  diff --git a/commit-msg b/commit-msg
+--index bcfa7f9..0b96fa0 100644
+-+index 0b96fa0..a222c54 100644
++-index 0b96fa0..a222c54 100644
+++index a222c54..07cde74 100644
+  --- a/commit-msg
+  +++ b/commit-msg
+--@@ -3,49 +3,15 @@
+-+@@ -3,15 +3,49 @@
+-  # OpenAI Key
+-  API_KEY="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"
++-@@ -3,15 +3,49 @@
++- # OpenAI Key
++- API_KEY="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"
+++@@ -29,8 +29,8 @@ SEMVER_SUGGESTION=""
+++ # Properly escape the DIFF_OUTPUT using jq
+++ ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c . --unbuffered)
+   
+---# Verify if required utilities are installed
+---if ! command -v curl &> /dev/null; then
+---    echo "Error: curl is not installed. Exiting."
+---    exit 1
+---fi
+-+-# The prompt you want to send
+-+-PROMPT="Translate the following English text to French: 'Hello, World!'"
+- -
+---if ! command -v jq &> /dev/null; then
+---    echo "Error: jq is not installed. Exiting."
+---    exit 1
+---fi
+-+-# Make the API request and store the response
+-+-RESPONSE=$(curl -s -X POST "https://api.openai.com/v1/engines/davinci-codex/completions" \
+-+-  -H "Content-Type: application/json" \
+-+-  -H "Authorization: Bearer $API_KEY" \
+-+-  -d "{\"prompt\":\"$PROMPT\",\"max_tokens\":100}" )
+- -
+---# File where the commit message is stored
+---COMMIT_MSG_FILE=$1
++--# The prompt you want to send
++--PROMPT="Translate the following English text to French: 'Hello, World!'"
+ --
+---# Capture the original commit message
+---ORIGINAL_COMMIT_MSG=$(cat $COMMIT_MSG_FILE)
++--# Make the API request and store the response
++--RESPONSE=$(curl -s -X POST "https://api.openai.com/v1/engines/davinci-codex/completions" \
++--  -H "Content-Type: application/json" \
++--  -H "Authorization: Bearer $API_KEY" \
++--  -d "{\"prompt\":\"$PROMPT\",\"max_tokens\":100}" )
+ --
+---# Capture the changes staged for commit
+---DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)
+---
+---# Initialize a variable to store the semantic versioning suggestion
+---SEMVER_SUGGESTION=""
+---
+---# Properly escape the DIFF_OUTPUT using jq
+---ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c .)
+---
+---# Construct the JSON payload
+---JSON_PAYLOAD="{\"prompt\":\"Analyze commit for semantic versioning: $ESCAPED_DIFF_OUTPUT\",\"max_tokens\":50}"
+---
+---# Make an API call to GPT-4 for analysis
+---API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
+---    -H "Content-Type: application/json" \
+---    -d "$JSON_PAYLOAD" \
+---    "https://api.openai.com/v1/chat/completions")
+---
+---# Debug: Print API response
+---echo "API Response: $API_RESPONSE"
+---
+---# Extract the suggestion from the API response using jq
+---SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text')
+---
+---# Debug: Print extracted suggestion
+---echo "Extracted Suggestion: $SEMVER_SUGGESTION"
+---
+---# Append the semantic versioning suggestion to the original commit message
+---echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
+--\ No newline at end of file
+--+# The prompt you want to send
+--+PROMPT="Translate the following English text to French: 'Hello, World!'"
+-+-# Extract and print the generated text using jq
+-+-GENERATED_TEXT=$(echo $RESPONSE | jq -r '.choices[0].text')
+-+-echo "Generated Text: $GENERATED_TEXT"
+-++# Verify if required utilities are installed
+-++if ! command -v curl &> /dev/null; then
+-++    echo "Error: curl is not installed. Exiting."
+-++    exit 1
+-++fi
+-++
+-++if ! command -v jq &> /dev/null; then
+-++    echo "Error: jq is not installed. Exiting."
+-++    exit 1
+-++fi
+-++
+-++# File where the commit message is stored
+-++COMMIT_MSG_FILE=$1
+-++
+-++# Capture the original commit message
+-++ORIGINAL_COMMIT_MSG=$(cat $COMMIT_MSG_FILE)
+-++
+-++# Capture the changes staged for commit
+-++DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)
+-++
+-++# Initialize a variable to store the semantic versioning suggestion
+-++SEMVER_SUGGESTION=""
+-++
+-++# Properly escape the DIFF_OUTPUT using jq
+-++ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c . --unbuffered)
+-++
+-++# Construct the JSON payload
+-++JSON_PAYLOAD="{\"prompt\":\"Analyze commit for semantic versioning: $ESCAPED_DIFF_OUTPUT\",\"max_tokens\":50}"
+-++
+-++# Make an API call to GPT-3.5 for analysis
+-++API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
+-++    -H "Content-Type: application/json" \
+-++    -d "$JSON_PAYLOAD" \
+-++    "https://api.openai.com/v1/chat/completions")
+-++
+-++# Debug: Print API response
+-++echo "API Response: $API_RESPONSE"
+-++
+-++# Extract the suggestion from the API response using jq
+-++SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text' --unbuffered)
+- +
+--+# Make the API request and store the response
+--+RESPONSE=$(curl -s -X POST "https://api.openai.com/v1/engines/davinci-codex/completions" \
+--+  -H "Content-Type: application/json" \
+--+  -H "Authorization: Bearer $API_KEY" \
+--+  -d "{\"prompt\":\"$PROMPT\",\"max_tokens\":100}" )
+-++# Debug: Print extracted suggestion
+-++echo "Extracted Suggestion: $SEMVER_SUGGESTION"
+- +
+--+# Extract and print the generated text using jq
+--+GENERATED_TEXT=$(echo $RESPONSE | jq -r '.choices[0].text')
+--+echo "Generated Text: $GENERATED_TEXT"
+-++# Append the semantic versioning suggestion to the original commit message
+-++echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
++--# Extract and print the generated text using jq
++--GENERATED_TEXT=$(echo $RESPONSE | jq -r '.choices[0].text')
++--echo "Generated Text: $GENERATED_TEXT"
++-+# Verify if required utilities are installed
++-+if ! command -v curl &> /dev/null; then
++-+    echo "Error: curl is not installed. Exiting."
++-+    exit 1
++-+fi
++-+
++-+if ! command -v jq &> /dev/null; then
++-+    echo "Error: jq is not installed. Exiting."
++-+    exit 1
++-+fi
++-+
++-+# File where the commit message is stored
++-+COMMIT_MSG_FILE=$1
++-+
++-+# Capture the original commit message
++-+ORIGINAL_COMMIT_MSG=$(cat $COMMIT_MSG_FILE)
++-+
++-+# Capture the changes staged for commit
++-+DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)
++-+
++-+# Initialize a variable to store the semantic versioning suggestion
++-+SEMVER_SUGGESTION=""
++-+
++-+# Properly escape the DIFF_OUTPUT using jq
++-+ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c . --unbuffered)
++-+
++-+# Construct the JSON payload
++-+JSON_PAYLOAD="{\"prompt\":\"Analyze commit for semantic versioning: $ESCAPED_DIFF_OUTPUT\",\"max_tokens\":50}"
++-+
++-+# Make an API call to GPT-3.5 for analysis
++-+API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
++-+    -H "Content-Type: application/json" \
++-+    -d "$JSON_PAYLOAD" \
++-+    "https://api.openai.com/v1/chat/completions")
++-+
++-+# Debug: Print API response
++-+echo "API Response: $API_RESPONSE"
++-+
++-+# Extract the suggestion from the API response using jq
++-+SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text' --unbuffered)
++-+
++-+# Debug: Print extracted suggestion
++-+echo "Extracted Suggestion: $SEMVER_SUGGESTION"
++-+
++-+# Append the semantic versioning suggestion to the original commit message
+++-# Construct the JSON payload
+++-JSON_PAYLOAD="{\"prompt\":\"Analyze commit for semantic versioning: $ESCAPED_DIFF_OUTPUT\",\"max_tokens\":50}"
++++# Construct the JSON payload using printf for proper escaping
++++JSON_PAYLOAD=$(printf '{"prompt":"Analyze commit for semantic versioning: %s","max_tokens":50}' "$ESCAPED_DIFF_OUTPUT")
+++ 
+++ # Make an API call to GPT-3.5 for analysis
+++ API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
+++@@ -48,4 +48,4 @@ SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text' --unbuffered)
+++ echo "Extracted Suggestion: $SEMVER_SUGGESTION"
+++ 
+++ # Append the semantic versioning suggestion to the original commit message
+++-echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
++ +echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
+++\ No newline at end of file
+  diff --git a/git-diff-cached-diff.logs b/git-diff-cached-diff.logs
+--index 7478a5a..e69de29 100644
+-+index e69de29..bb1f8c6 100644
++-index e69de29..bb1f8c6 100644
+++index bb1f8c6..de89159 100644
+  --- a/git-diff-cached-diff.logs
+  +++ b/git-diff-cached-diff.logs
+--@@ -1,48 +0,0 @@
+---diff --git a/commit-msg b/commit-msg
+---index 07c3c02..bcfa7f9 100644
+------ a/commit-msg
+---+++ b/commit-msg
+---@@ -1,7 +1,7 @@
+--- #!/bin/bash
+--- 
+--- # OpenAI Key
+----API_KEY="???"
+---+API_KEY="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"
+--- 
+--- # Verify if required utilities are installed
+--- if ! command -v curl &> /dev/null; then
+---@@ -21,7 +21,7 @@ COMMIT_MSG_FILE=$1
+--- ORIGINAL_COMMIT_MSG=$(cat $COMMIT_MSG_FILE)
+--- 
+--- # Capture the changes staged for commit
+----DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)     
+---+DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)
+--- 
+--- # Initialize a variable to store the semantic versioning suggestion
+--- SEMVER_SUGGESTION=""
+---@@ -32,20 +32,20 @@ ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c .)
+--- # Construct the JSON payload
+--- JSON_PAYLOAD="{\"prompt\":\"Analyze commit for semantic versioning: $ESCAPED_DIFF_OUTPUT\",\"max_tokens\":50}"
+--- 
+----# Make an API call to ChatGPT for analysis
+---+# Make an API call to GPT-4 for analysis
+--- API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
+---     -H "Content-Type: application/json" \
+---     -d "$JSON_PAYLOAD" \
+----    "https://api.openai.com/v1/engines/davinci-codex/completions")
+---+    "https://api.openai.com/v1/chat/completions")
+--- 
+--- # Debug: Print API response
+--- echo "API Response: $API_RESPONSE"
+--- 
+----# Extract the suggestion from the API response
+---+# Extract the suggestion from the API response using jq
+--- SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text')
+--- 
+--- # Debug: Print extracted suggestion
+--- echo "Extracted Suggestion: $SEMVER_SUGGESTION"
+--- 
+--- # Append the semantic versioning suggestion to the original commit message
+----echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
+---+echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
+---\ No newline at end of file
+-+@@ -0,0 +1,120 @@
+-++diff --git a/commit-msg b/commit-msg
+-++index bcfa7f9..0b96fa0 100644
+-++--- a/commit-msg
+-+++++ b/commit-msg
+-++@@ -3,49 +3,15 @@
+-++ # OpenAI Key
+-++ API_KEY="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"
+-++ 
+-++-# Verify if required utilities are installed
+-++-if ! command -v curl &> /dev/null; then
+-++-    echo "Error: curl is not installed. Exiting."
+-++-    exit 1
+-++-fi
+-++-
+-++-if ! command -v jq &> /dev/null; then
+-++-    echo "Error: jq is not installed. Exiting."
+-++-    exit 1
+-++-fi
+-++-
+-++-# File where the commit message is stored
+-++-COMMIT_MSG_FILE=$1
+-++-
+-++-# Capture the original commit message
+-++-ORIGINAL_COMMIT_MSG=$(cat $COMMIT_MSG_FILE)
+-++-
+-++-# Capture the changes staged for commit
+-++-DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)
+-++-
+-++-# Initialize a variable to store the semantic versioning suggestion
+-++-SEMVER_SUGGESTION=""
+-++-
+-++-# Properly escape the DIFF_OUTPUT using jq
+-++-ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c .)
+-++-
+-++-# Construct the JSON payload
+-++-JSON_PAYLOAD="{\"prompt\":\"Analyze commit for semantic versioning: $ESCAPED_DIFF_OUTPUT\",\"max_tokens\":50}"
+-++-
+-++-# Make an API call to GPT-4 for analysis
+-++-API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
+-++-    -H "Content-Type: application/json" \
+-++-    -d "$JSON_PAYLOAD" \
+-++-    "https://api.openai.com/v1/chat/completions")
+-++-
+-++-# Debug: Print API response
+-++-echo "API Response: $API_RESPONSE"
+-++-
+-++-# Extract the suggestion from the API response using jq
+-++-SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text')
+-++-
+-++-# Debug: Print extracted suggestion
+-++-echo "Extracted Suggestion: $SEMVER_SUGGESTION"
+-++-
+-++-# Append the semantic versioning suggestion to the original commit message
+-++-echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
+-++\ No newline at end of file
+-+++# The prompt you want to send
+-+++PROMPT="Translate the following English text to French: 'Hello, World!'"
++-@@ -0,0 +1,120 @@
++-+diff --git a/commit-msg b/commit-msg
++-+index bcfa7f9..0b96fa0 100644
++-+--- a/commit-msg
++-++++ b/commit-msg
++-+@@ -3,49 +3,15 @@
++-+ # OpenAI Key
++-+ API_KEY="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"
++-+ 
++-+-# Verify if required utilities are installed
++-+-if ! command -v curl &> /dev/null; then
++-+-    echo "Error: curl is not installed. Exiting."
++-+-    exit 1
++-+-fi
++-+-
++-+-if ! command -v jq &> /dev/null; then
++-+-    echo "Error: jq is not installed. Exiting."
++-+-    exit 1
++-+-fi
++-+-
++-+-# File where the commit message is stored
++-+-COMMIT_MSG_FILE=$1
++-+-
++-+-# Capture the original commit message
++-+-ORIGINAL_COMMIT_MSG=$(cat $COMMIT_MSG_FILE)
++-+-
++-+-# Capture the changes staged for commit
++-+-DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)
++-+-
++-+-# Initialize a variable to store the semantic versioning suggestion
++-+-SEMVER_SUGGESTION=""
++-+-
++-+-# Properly escape the DIFF_OUTPUT using jq
++-+-ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c .)
++-+-
++-+-# Construct the JSON payload
++-+-JSON_PAYLOAD="{\"prompt\":\"Analyze commit for semantic versioning: $ESCAPED_DIFF_OUTPUT\",\"max_tokens\":50}"
++-+-
++-+-# Make an API call to GPT-4 for analysis
++-+-API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
++-+-    -H "Content-Type: application/json" \
++-+-    -d "$JSON_PAYLOAD" \
++-+-    "https://api.openai.com/v1/chat/completions")
++-+-
++-+-# Debug: Print API response
++-+-echo "API Response: $API_RESPONSE"
++-+-
++-+-# Extract the suggestion from the API response using jq
++-+-SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text')
++-+-
++-+-# Debug: Print extracted suggestion
++-+-echo "Extracted Suggestion: $SEMVER_SUGGESTION"
++-+-
++-+-# Append the semantic versioning suggestion to the original commit message
++-+-echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
++-+\ No newline at end of file
++-++# The prompt you want to send
++-++PROMPT="Translate the following English text to French: 'Hello, World!'"
+++@@ -1,120 +1,191 @@
+++ diff --git a/commit-msg b/commit-msg
+++-index bcfa7f9..0b96fa0 100644
++++index 0b96fa0..a222c54 100644
+++ --- a/commit-msg
+++ +++ b/commit-msg
+++-@@ -3,49 +3,15 @@
++++@@ -3,15 +3,49 @@
+++  # OpenAI Key
+++  API_KEY="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"
+++  
+++--# Verify if required utilities are installed
+++--if ! command -v curl &> /dev/null; then
+++--    echo "Error: curl is not installed. Exiting."
+++--    exit 1
+++--fi
++++-# The prompt you want to send
++++-PROMPT="Translate the following English text to French: 'Hello, World!'"
+++ -
+++--if ! command -v jq &> /dev/null; then
+++--    echo "Error: jq is not installed. Exiting."
+++--    exit 1
+++--fi
++++-# Make the API request and store the response
++++-RESPONSE=$(curl -s -X POST "https://api.openai.com/v1/engines/davinci-codex/completions" \
++++-  -H "Content-Type: application/json" \
++++-  -H "Authorization: Bearer $API_KEY" \
++++-  -d "{\"prompt\":\"$PROMPT\",\"max_tokens\":100}" )
+++ -
+++--# File where the commit message is stored
+++--COMMIT_MSG_FILE=$1
+++--
+++--# Capture the original commit message
+++--ORIGINAL_COMMIT_MSG=$(cat $COMMIT_MSG_FILE)
+++--
+++--# Capture the changes staged for commit
+++--DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)
+++--
+++--# Initialize a variable to store the semantic versioning suggestion
+++--SEMVER_SUGGESTION=""
+++--
+++--# Properly escape the DIFF_OUTPUT using jq
+++--ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c .)
+++--
+++--# Construct the JSON payload
+++--JSON_PAYLOAD="{\"prompt\":\"Analyze commit for semantic versioning: $ESCAPED_DIFF_OUTPUT\",\"max_tokens\":50}"
+++--
+++--# Make an API call to GPT-4 for analysis
+++--API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
+++--    -H "Content-Type: application/json" \
+++--    -d "$JSON_PAYLOAD" \
+++--    "https://api.openai.com/v1/chat/completions")
+++--
+++--# Debug: Print API response
+++--echo "API Response: $API_RESPONSE"
+++--
+++--# Extract the suggestion from the API response using jq
+++--SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text')
+++--
+++--# Debug: Print extracted suggestion
+++--echo "Extracted Suggestion: $SEMVER_SUGGESTION"
+++--
+++--# Append the semantic versioning suggestion to the original commit message
+++--echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
+++-\ No newline at end of file
+++-+# The prompt you want to send
+++-+PROMPT="Translate the following English text to French: 'Hello, World!'"
++++-# Extract and print the generated text using jq
++++-GENERATED_TEXT=$(echo $RESPONSE | jq -r '.choices[0].text')
++++-echo "Generated Text: $GENERATED_TEXT"
+++++# Verify if required utilities are installed
+++++if ! command -v curl &> /dev/null; then
+++++    echo "Error: curl is not installed. Exiting."
+++++    exit 1
+++++fi
 ++++
-++++# Make the API request and store the response
-++++RESPONSE=$(curl -s -X POST "https://api.openai.com/v1/engines/davinci-codex/completions" \
-++++  -H "Content-Type: application/json" \
-++++  -H "Authorization: Bearer $API_KEY" \
-++++  -d "{\"prompt\":\"$PROMPT\",\"max_tokens\":100}" )
+++++if ! command -v jq &> /dev/null; then
+++++    echo "Error: jq is not installed. Exiting."
+++++    exit 1
+++++fi
 ++++
-++++# Extract and print the generated text using jq
-++++GENERATED_TEXT=$(echo $RESPONSE | jq -r '.choices[0].text')
-++++echo "Generated Text: $GENERATED_TEXT"
-+++diff --git a/git-diff-cached-diff.logs b/git-diff-cached-diff.logs
-+++index 7478a5a..e69de29 100644
-+++--- a/git-diff-cached-diff.logs
-++++++ b/git-diff-cached-diff.logs
-+++@@ -1,48 +0,0 @@
-+++-diff --git a/commit-msg b/commit-msg
-+++-index 07c3c02..bcfa7f9 100644
-+++---- a/commit-msg
-+++-+++ b/commit-msg
-+++-@@ -1,7 +1,7 @@
-+++- #!/bin/bash
-+++- 
-+++- # OpenAI Key
-+++--API_KEY="???"
-+++-+API_KEY="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"
-+++- 
-+++- # Verify if required utilities are installed
-+++- if ! command -v curl &> /dev/null; then
-+++-@@ -21,7 +21,7 @@ COMMIT_MSG_FILE=$1
-+++- ORIGINAL_COMMIT_MSG=$(cat $COMMIT_MSG_FILE)
-+++- 
-+++- # Capture the changes staged for commit
-+++--DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)     
-+++-+DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)
-+++- 
-+++- # Initialize a variable to store the semantic versioning suggestion
-+++- SEMVER_SUGGESTION=""
-+++-@@ -32,20 +32,20 @@ ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c .)
-+++- # Construct the JSON payload
-+++- JSON_PAYLOAD="{\"prompt\":\"Analyze commit for semantic versioning: $ESCAPED_DIFF_OUTPUT\",\"max_tokens\":50}"
-+++- 
-+++--# Make an API call to ChatGPT for analysis
-+++-+# Make an API call to GPT-4 for analysis
-+++- API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
-+++-     -H "Content-Type: application/json" \
-+++-     -d "$JSON_PAYLOAD" \
-+++--    "https://api.openai.com/v1/engines/davinci-codex/completions")
-+++-+    "https://api.openai.com/v1/chat/completions")
-+++- 
-+++- # Debug: Print API response
-+++- echo "API Response: $API_RESPONSE"
-+++- 
-+++--# Extract the suggestion from the API response
-+++-+# Extract the suggestion from the API response using jq
-+++- SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text')
-+++- 
-+++- # Debug: Print extracted suggestion
-+++- echo "Extracted Suggestion: $SEMVER_SUGGESTION"
-+++- 
-+++- # Append the semantic versioning suggestion to the original commit message
-+++--echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
-+++-+echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
-+++-\ No newline at end of file
+++++# File where the commit message is stored
+++++COMMIT_MSG_FILE=$1
+++++
+++++# Capture the original commit message
+++++ORIGINAL_COMMIT_MSG=$(cat $COMMIT_MSG_FILE)
+++++
+++++# Capture the changes staged for commit
+++++DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)
+++++
+++++# Initialize a variable to store the semantic versioning suggestion
+++++SEMVER_SUGGESTION=""
+++++
+++++# Properly escape the DIFF_OUTPUT using jq
+++++ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c . --unbuffered)
+ +++
+-+++# Make the API request and store the response
+-+++RESPONSE=$(curl -s -X POST "https://api.openai.com/v1/engines/davinci-codex/completions" \
+-+++  -H "Content-Type: application/json" \
+-+++  -H "Authorization: Bearer $API_KEY" \
+-+++  -d "{\"prompt\":\"$PROMPT\",\"max_tokens\":100}" )
+++++# Construct the JSON payload
+++++JSON_PAYLOAD="{\"prompt\":\"Analyze commit for semantic versioning: $ESCAPED_DIFF_OUTPUT\",\"max_tokens\":50}"
+ +++
+-+++# Extract and print the generated text using jq
+-+++GENERATED_TEXT=$(echo $RESPONSE | jq -r '.choices[0].text')
+-+++echo "Generated Text: $GENERATED_TEXT"
+-++diff --git a/git-diff-cached-diff.logs b/git-diff-cached-diff.logs
+-++index 7478a5a..e69de29 100644
+-++--- a/git-diff-cached-diff.logs
+-+++++ b/git-diff-cached-diff.logs
+-++@@ -1,48 +0,0 @@
+-++-diff --git a/commit-msg b/commit-msg
+-++-index 07c3c02..bcfa7f9 100644
+-++---- a/commit-msg
+-++-+++ b/commit-msg
+-++-@@ -1,7 +1,7 @@
+-++- #!/bin/bash
+-++- 
+-++- # OpenAI Key
+-++--API_KEY="???"
+-++-+API_KEY="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"
+-++- 
+-++- # Verify if required utilities are installed
+-++- if ! command -v curl &> /dev/null; then
+-++-@@ -21,7 +21,7 @@ COMMIT_MSG_FILE=$1
+-++- ORIGINAL_COMMIT_MSG=$(cat $COMMIT_MSG_FILE)
+-++- 
+-++- # Capture the changes staged for commit
+-++--DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)     
+-++-+DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)
+-++- 
+-++- # Initialize a variable to store the semantic versioning suggestion
+-++- SEMVER_SUGGESTION=""
+-++-@@ -32,20 +32,20 @@ ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c .)
+-++- # Construct the JSON payload
+-++- JSON_PAYLOAD="{\"prompt\":\"Analyze commit for semantic versioning: $ESCAPED_DIFF_OUTPUT\",\"max_tokens\":50}"
+-++- 
+-++--# Make an API call to ChatGPT for analysis
+-++-+# Make an API call to GPT-4 for analysis
+-++- API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
+-++-     -H "Content-Type: application/json" \
+-++-     -d "$JSON_PAYLOAD" \
+-++--    "https://api.openai.com/v1/engines/davinci-codex/completions")
+-++-+    "https://api.openai.com/v1/chat/completions")
+-++- 
+-++- # Debug: Print API response
+-++- echo "API Response: $API_RESPONSE"
+-++- 
+-++--# Extract the suggestion from the API response
+-++-+# Extract the suggestion from the API response using jq
+-++- SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text')
+-++- 
+-++- # Debug: Print extracted suggestion
+-++- echo "Extracted Suggestion: $SEMVER_SUGGESTION"
+-++- 
+-++- # Append the semantic versioning suggestion to the original commit message
+-++--echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
+-++-+echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
+-++-\ No newline at end of file
+++++# Make an API call to GPT-3.5 for analysis
+++++API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
+++++    -H "Content-Type: application/json" \
+++++    -d "$JSON_PAYLOAD" \
+++++    "https://api.openai.com/v1/chat/completions")
++ ++
++-++# Make the API request and store the response
++-++RESPONSE=$(curl -s -X POST "https://api.openai.com/v1/engines/davinci-codex/completions" \
++-++  -H "Content-Type: application/json" \
++-++  -H "Authorization: Bearer $API_KEY" \
++-++  -d "{\"prompt\":\"$PROMPT\",\"max_tokens\":100}" )
+++++# Debug: Print API response
+++++echo "API Response: $API_RESPONSE"
++ ++
++-++# Extract and print the generated text using jq
++-++GENERATED_TEXT=$(echo $RESPONSE | jq -r '.choices[0].text')
++-++echo "Generated Text: $GENERATED_TEXT"
++-+diff --git a/git-diff-cached-diff.logs b/git-diff-cached-diff.logs
++-+index 7478a5a..e69de29 100644
++-+--- a/git-diff-cached-diff.logs
++-++++ b/git-diff-cached-diff.logs
++-+@@ -1,48 +0,0 @@
++-+-diff --git a/commit-msg b/commit-msg
++-+-index 07c3c02..bcfa7f9 100644
++-+---- a/commit-msg
++-+-+++ b/commit-msg
++-+-@@ -1,7 +1,7 @@
++-+- #!/bin/bash
++-+- 
++-+- # OpenAI Key
++-+--API_KEY="???"
++-+-+API_KEY="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"
++-+- 
++-+- # Verify if required utilities are installed
++-+- if ! command -v curl &> /dev/null; then
++-+-@@ -21,7 +21,7 @@ COMMIT_MSG_FILE=$1
++-+- ORIGINAL_COMMIT_MSG=$(cat $COMMIT_MSG_FILE)
++-+- 
++-+- # Capture the changes staged for commit
++-+--DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)     
++-+-+DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)
++-+- 
++-+- # Initialize a variable to store the semantic versioning suggestion
++-+- SEMVER_SUGGESTION=""
++-+-@@ -32,20 +32,20 @@ ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c .)
++-+- # Construct the JSON payload
++-+- JSON_PAYLOAD="{\"prompt\":\"Analyze commit for semantic versioning: $ESCAPED_DIFF_OUTPUT\",\"max_tokens\":50}"
++-+- 
++-+--# Make an API call to ChatGPT for analysis
++-+-+# Make an API call to GPT-4 for analysis
++-+- API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
++-+-     -H "Content-Type: application/json" \
++-+-     -d "$JSON_PAYLOAD" \
++-+--    "https://api.openai.com/v1/engines/davinci-codex/completions")
++-+-+    "https://api.openai.com/v1/chat/completions")
++-+- 
++-+- # Debug: Print API response
++-+- echo "API Response: $API_RESPONSE"
++-+- 
++-+--# Extract the suggestion from the API response
++-+-+# Extract the suggestion from the API response using jq
++-+- SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text')
++-+- 
++-+- # Debug: Print extracted suggestion
++-+- echo "Extracted Suggestion: $SEMVER_SUGGESTION"
++-+- 
++-+- # Append the semantic versioning suggestion to the original commit message
++-+--echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
++-+-+echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
++-+-\ No newline at end of file
+++++# Extract the suggestion from the API response using jq
+++++SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text' --unbuffered)
+++ +
+++-+# Make the API request and store the response
+++-+RESPONSE=$(curl -s -X POST "https://api.openai.com/v1/engines/davinci-codex/completions" \
+++-+  -H "Content-Type: application/json" \
+++-+  -H "Authorization: Bearer $API_KEY" \
+++-+  -d "{\"prompt\":\"$PROMPT\",\"max_tokens\":100}" )
+++++# Debug: Print extracted suggestion
+++++echo "Extracted Suggestion: $SEMVER_SUGGESTION"
+++ +
+++-+# Extract and print the generated text using jq
+++-+GENERATED_TEXT=$(echo $RESPONSE | jq -r '.choices[0].text')
+++-+echo "Generated Text: $GENERATED_TEXT"
+++++# Append the semantic versioning suggestion to the original commit message
+++++echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
+++ diff --git a/git-diff-cached-diff.logs b/git-diff-cached-diff.logs
+++-index 7478a5a..e69de29 100644
++++index e69de29..bb1f8c6 100644
+++ --- a/git-diff-cached-diff.logs
+++ +++ b/git-diff-cached-diff.logs
+++-@@ -1,48 +0,0 @@
+++--diff --git a/commit-msg b/commit-msg
+++--index 07c3c02..bcfa7f9 100644
+++----- a/commit-msg
+++--+++ b/commit-msg
+++--@@ -1,7 +1,7 @@
+++-- #!/bin/bash
+++-- 
+++-- # OpenAI Key
+++---API_KEY="???"
+++--+API_KEY="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"
+++-- 
+++-- # Verify if required utilities are installed
+++-- if ! command -v curl &> /dev/null; then
+++--@@ -21,7 +21,7 @@ COMMIT_MSG_FILE=$1
+++-- ORIGINAL_COMMIT_MSG=$(cat $COMMIT_MSG_FILE)
+++-- 
+++-- # Capture the changes staged for commit
+++---DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)     
+++--+DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)
+++-- 
+++-- # Initialize a variable to store the semantic versioning suggestion
+++-- SEMVER_SUGGESTION=""
+++--@@ -32,20 +32,20 @@ ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c .)
+++-- # Construct the JSON payload
+++-- JSON_PAYLOAD="{\"prompt\":\"Analyze commit for semantic versioning: $ESCAPED_DIFF_OUTPUT\",\"max_tokens\":50}"
+++-- 
+++---# Make an API call to ChatGPT for analysis
+++--+# Make an API call to GPT-4 for analysis
+++-- API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
+++--     -H "Content-Type: application/json" \
+++--     -d "$JSON_PAYLOAD" \
+++---    "https://api.openai.com/v1/engines/davinci-codex/completions")
+++--+    "https://api.openai.com/v1/chat/completions")
+++-- 
+++-- # Debug: Print API response
+++-- echo "API Response: $API_RESPONSE"
+++-- 
+++---# Extract the suggestion from the API response
+++--+# Extract the suggestion from the API response using jq
+++-- SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text')
+++-- 
+++-- # Debug: Print extracted suggestion
+++-- echo "Extracted Suggestion: $SEMVER_SUGGESTION"
+++-- 
+++-- # Append the semantic versioning suggestion to the original commit message
+++---echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
+++--+echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
+++--\ No newline at end of file
++++@@ -0,0 +1,120 @@
+++++diff --git a/commit-msg b/commit-msg
+++++index bcfa7f9..0b96fa0 100644
+++++--- a/commit-msg
++++++++ b/commit-msg
+++++@@ -3,49 +3,15 @@
+++++ # OpenAI Key
+++++ API_KEY="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"
+++++ 
+++++-# Verify if required utilities are installed
+++++-if ! command -v curl &> /dev/null; then
+++++-    echo "Error: curl is not installed. Exiting."
+++++-    exit 1
+++++-fi
+++++-
+++++-if ! command -v jq &> /dev/null; then
+++++-    echo "Error: jq is not installed. Exiting."
+++++-    exit 1
+++++-fi
+++++-
+++++-# File where the commit message is stored
+++++-COMMIT_MSG_FILE=$1
+++++-
+++++-# Capture the original commit message
+++++-ORIGINAL_COMMIT_MSG=$(cat $COMMIT_MSG_FILE)
+++++-
+++++-# Capture the changes staged for commit
+++++-DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)
+++++-
+++++-# Initialize a variable to store the semantic versioning suggestion
+++++-SEMVER_SUGGESTION=""
+++++-
+++++-# Properly escape the DIFF_OUTPUT using jq
+++++-ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c .)
+++++-
+++++-# Construct the JSON payload
+++++-JSON_PAYLOAD="{\"prompt\":\"Analyze commit for semantic versioning: $ESCAPED_DIFF_OUTPUT\",\"max_tokens\":50}"
+++++-
+++++-# Make an API call to GPT-4 for analysis
+++++-API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
+++++-    -H "Content-Type: application/json" \
+++++-    -d "$JSON_PAYLOAD" \
+++++-    "https://api.openai.com/v1/chat/completions")
+++++-
+++++-# Debug: Print API response
+++++-echo "API Response: $API_RESPONSE"
+++++-
+++++-# Extract the suggestion from the API response using jq
+++++-SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text')
+++++-
+++++-# Debug: Print extracted suggestion
+++++-echo "Extracted Suggestion: $SEMVER_SUGGESTION"
+++++-
+++++-# Append the semantic versioning suggestion to the original commit message
+++++-echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
+++++\ No newline at end of file
++++++# The prompt you want to send
++++++PROMPT="Translate the following English text to French: 'Hello, World!'"
++++++
++++++# Make the API request and store the response
++++++RESPONSE=$(curl -s -X POST "https://api.openai.com/v1/engines/davinci-codex/completions" \
++++++  -H "Content-Type: application/json" \
++++++  -H "Authorization: Bearer $API_KEY" \
++++++  -d "{\"prompt\":\"$PROMPT\",\"max_tokens\":100}" )
++++++
++++++# Extract and print the generated text using jq
++++++GENERATED_TEXT=$(echo $RESPONSE | jq -r '.choices[0].text')
++++++echo "Generated Text: $GENERATED_TEXT"
+++++diff --git a/git-diff-cached-diff.logs b/git-diff-cached-diff.logs
+++++index 7478a5a..e69de29 100644
+++++--- a/git-diff-cached-diff.logs
++++++++ b/git-diff-cached-diff.logs
+++++@@ -1,48 +0,0 @@
+++++-diff --git a/commit-msg b/commit-msg
+++++-index 07c3c02..bcfa7f9 100644
+++++---- a/commit-msg
+++++-+++ b/commit-msg
+++++-@@ -1,7 +1,7 @@
+++++- #!/bin/bash
+++++- 
+++++- # OpenAI Key
+++++--API_KEY="???"
+++++-+API_KEY="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"
+++++- 
+++++- # Verify if required utilities are installed
+++++- if ! command -v curl &> /dev/null; then
+++++-@@ -21,7 +21,7 @@ COMMIT_MSG_FILE=$1
+++++- ORIGINAL_COMMIT_MSG=$(cat $COMMIT_MSG_FILE)
+++++- 
+++++- # Capture the changes staged for commit
+++++--DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)     
+++++-+DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)
+++++- 
+++++- # Initialize a variable to store the semantic versioning suggestion
+++++- SEMVER_SUGGESTION=""
+++++-@@ -32,20 +32,20 @@ ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c .)
+++++- # Construct the JSON payload
+++++- JSON_PAYLOAD="{\"prompt\":\"Analyze commit for semantic versioning: $ESCAPED_DIFF_OUTPUT\",\"max_tokens\":50}"
+++++- 
+++++--# Make an API call to ChatGPT for analysis
+++++-+# Make an API call to GPT-4 for analysis
+++++- API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
+++++-     -H "Content-Type: application/json" \
+++++-     -d "$JSON_PAYLOAD" \
+++++--    "https://api.openai.com/v1/engines/davinci-codex/completions")
+++++-+    "https://api.openai.com/v1/chat/completions")
+++++- 
+++++- # Debug: Print API response
+++++- echo "API Response: $API_RESPONSE"
+++++- 
+++++--# Extract the suggestion from the API response
+++++-+# Extract the suggestion from the API response using jq
+++++- SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text')
+++++- 
+++++- # Debug: Print extracted suggestion
+++++- echo "Extracted Suggestion: $SEMVER_SUGGESTION"
+++++- 
+++++- # Append the semantic versioning suggestion to the original commit message
+++++--echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
+++++-+echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE
+++++-\ No newline at end of file
