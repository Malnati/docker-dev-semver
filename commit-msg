#!/bin/bash

# OpenAI Key
API_KEY="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"

# Verify if required utilities are installed
if ! command -v curl &> /dev/null; then
    echo "Error: curl is not installed. Exiting."
    exit 1
fi

if ! command -v jq &> /dev/null; then
    echo "Error: jq is not installed. Exiting."
    exit 1
fi

# File where the commit message is stored
COMMIT_MSG_FILE=$1

# Capture the original commit message
ORIGINAL_COMMIT_MSG=$(cat $COMMIT_MSG_FILE)

# Capture the changes staged for commit
DIFF_OUTPUT=$(git diff --cached --diff-filter=CMRTUXB)

# Initialize a variable to store the semantic versioning suggestion
SEMVER_SUGGESTION=""

# Properly escape the DIFF_OUTPUT using jq
ESCAPED_DIFF_OUTPUT=$(echo "$DIFF_OUTPUT" | jq -R -s -c . --unbuffered)

# Construct the JSON payload using printf for proper escaping
JSON_PAYLOAD=$(printf '{"prompt":"Analyze commit for semantic versioning: %s","max_tokens":50}' "$ESCAPED_DIFF_OUTPUT")

# Make an API call to GPT-3.5 for analysis
API_RESPONSE=$(curl -s -H "Authorization: Bearer ${API_KEY}" \
    -H "Content-Type: application/json" \
    -d "$JSON_PAYLOAD" \
    "https://api.openai.com/v1/chat/completions")

# Debug: Print API response
echo "API Response: $API_RESPONSE"

# Extract the suggestion from the API response using jq
SEMVER_SUGGESTION=$(echo $API_RESPONSE | jq -r '.choices[0].text' --unbuffered)

# Debug: Print extracted suggestion
echo "Extracted Suggestion: $SEMVER_SUGGESTION"

# Append the semantic versioning suggestion to the original commit message
echo "$ORIGINAL_COMMIT_MSG ($SEMVER_SUGGESTION)" > $COMMIT_MSG_FILE